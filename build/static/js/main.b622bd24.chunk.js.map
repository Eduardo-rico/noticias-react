{"version":3,"sources":["components/Header.js","hooks/useSelect.js","components/Formulario.js","components/Noticia.js","components/ListadoNoticias.js","App.js","serviceWorker.js","index.js","components/Formulario.module.css"],"names":["Header","titulo","className","href","useSelect","stateInicial","opciones","useState","state","actualizarState","value","onChange","e","target","map","opcion","key","label","Formulario","guardarCategoria","categoria","SelectNoticias","styles","buscador","onSubmit","preventDefault","heading","type","btn_block","Noticia","noticia","urlToImage","url","title","description","source","imagen","src","alt","name","rel","ListadoNoticias","noticias","App","guardarNoticias","useEffect","a","fetch","respuesta","json","articles","consultarAPI","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.b622bd24.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Header = ({ titulo }) => {\n  return (\n    <nav className='nav-wrapper light-blue darken-3'>\n      <a href='!#' className='brand-logo center'>\n        {titulo}\n      </a>\n    </nav>\n  );\n};\n\nHeader.propTypes = {\n  titulo: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n\nconst useSelect = (stateInicial, opciones) => {\n  //state del custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const SelectNoticias = () => (\n    <select\n      className='browser-default'\n      value={state}\n      onChange={(e) => actualizarState(e.target.value)}\n    >\n      {opciones.map((opcion) => (\n        <option key={opcion.value} value={opcion.value}>\n          {opcion.label}\n        </option>\n      ))}\n    </select>\n  );\n\n  return [state, SelectNoticias];\n};\n\nexport default useSelect;\n","import React from \"react\";\nimport styles from \"./Formulario.module.css\";\nimport useSelect from \"../hooks/useSelect\";\nimport PropTypes from \"prop-types\";\n\nconst Formulario = ({ guardarCategoria }) => {\n  const OPCIONES = [\n    { value: \"general\", label: \"General\" },\n    { value: \"business\", label: \"Negocios\" },\n    { value: \"entretainment\", label: \"Entretenimiento\" },\n    { value: \"health\", label: \"Salud\" },\n    { value: \"science\", label: \"Ciencia\" },\n    { value: \"sports\", label: \"Deportes\" },\n    { value: \"technology\", label: \"Tecnologia\" }\n  ];\n\n  //usar custom hook\n  const [categoria, SelectNoticias] = useSelect(\"general\", OPCIONES);\n\n  //submit al form, pasa la categoria al app.justify\n\n  const buscarNoticias = (e) => {\n    e.preventDefault();\n    guardarCategoria(categoria);\n  };\n\n  return (\n    <div className={`row ${styles.buscador}`}>\n      <div className='col s12 m8 offset-m2'>\n        <form onSubmit={buscarNoticias}>\n          <h2 className={styles.heading}>Encuentra noticias por categoria</h2>\n          <SelectNoticias />\n          <div className='input-field col s12'>\n            <input\n              type='submit'\n              className={`btn-large amber darken-2 ${styles.btn_block}`}\n              value='buscar'\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nFormulario.propTypes = {\n  guardarCategoria: PropTypes.func.isRequired\n};\n\nexport default Formulario;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Noticia = ({ noticia }) => {\n  //extraer los datos\n  const { urlToImage, url, title, description, source } = noticia;\n\n  const imagen = urlToImage ? (\n    <div className='card-image'>\n      <img src={urlToImage} alt={title} />\n      <span className='card-title'>{source.name}</span>\n    </div>\n  ) : null;\n\n  return (\n    <div className='col s12 m6 l4'>\n      <div className='card'>\n        {imagen}\n        <div className='card-contet'>\n          <h3>{title}</h3>\n          <p>{description}</p>\n        </div>\n        <div className='card-action'>\n          <a\n            href={url}\n            target='_blank'\n            rel='noopener noreferrer'\n            className='waves-effect waves-light btn'\n          >\n            Ver noticia completa\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nNoticia.propTypes = {\n  noticia: PropTypes.object.isRequired\n};\n\nexport default Noticia;\n","import React from \"react\";\nimport Noticia from \"./Noticia\";\nimport PropTypes from \"prop-types\";\nconst ListadoNoticias = ({ noticias }) => {\n  return (\n    <div className='row'>\n      {noticias.map((noticia) => (\n        <Noticia key={noticia.url} noticia={noticia} />\n      ))}\n      <small>\n        <a href='https://newsapi.org'> https://newsapi.org</a>\n      </small>\n    </div>\n  );\n};\n\nListadoNoticias.propTypes = {\n  noticias: PropTypes.array.isRequired\n};\n\nexport default ListadoNoticias;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport ListadoNoticias from \"./components/ListadoNoticias\";\n\nfunction App() {\n  //definir la categoria y noticias\n  const [categoria, guardarCategoria] = useState(\"\");\n  //state para guardar las noticias\n  const [noticias, guardarNoticias] = useState([]);\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      const url = `http://newsapi.org/v2/top-headlines?country=mx&category=${categoria}&apiKey=9c5ea783568d43d9b40900e92f82d4c6`;\n      const respuesta = await fetch(url);\n      const noticias = await respuesta.json();\n      guardarNoticias(noticias.articles);\n    };\n    consultarAPI();\n  }, [categoria]);\n\n  return (\n    <Fragment>\n      <Header titulo='Buscador de noticias' />\n      <div className='container white'>\n        <Formulario guardarCategoria={guardarCategoria} />\n        <ListadoNoticias noticias={noticias} />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Formulario_heading__sN5Ey\",\"buscador\":\"Formulario_buscador__2ABO4\",\"btn_block\":\"Formulario_btn_block__3xO29\"};"],"sourceRoot":""}